<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Definitions SYSTEM "widlprocxml.dtd">
<Definitions>
  <Module name="W3CWidget" id="::W3CWidget">
    <webidl>module W3CWidget
{
    [NoInterfaceObject]
    interface W3CWidget {
        readonly attribute DOMString     author;
                readonly attribute DOMString     authorEmail;
        readonly attribute DOMString     authorHref;
                readonly attribute DOMString     description;
                readonly attribute DOMString     id;
                readonly attribute DOMString     name;
                readonly attribute DOMString     shortName;
                readonly attribute <ref>Storage</ref>       preferences;
                readonly attribute DOMString     version;
                readonly attribute unsigned long height;
                readonly attribute unsigned long width;
    };

    [Supplemental, NoInterfaceObject]
    interface WindowWidget {
      readonly attribute <ref>W3CWidget</ref> widget;
    };

    <ref>Window</ref> implements <ref>WindowWidget</ref>;
};</webidl>
    <Interface name="W3CWidget" id="::W3CWidget::W3CWidget">
      <webidl>    [NoInterfaceObject]
    interface W3CWidget {
        readonly attribute DOMString     author;
                readonly attribute DOMString     authorEmail;
        readonly attribute DOMString     authorHref;
                readonly attribute DOMString     description;
                readonly attribute DOMString     id;
                readonly attribute DOMString     name;
                readonly attribute DOMString     shortName;
                readonly attribute <ref>Storage</ref>       preferences;
                readonly attribute DOMString     version;
                readonly attribute unsigned long height;
                readonly attribute unsigned long width;
    };</webidl>
      <ExtendedAttributeList>
        <ExtendedAttribute name="NoInterfaceObject"/>
      </ExtendedAttributeList>
      <Attribute readonly="readonly" name="author" id="::W3CWidget::W3CWidget::author">
        <webidl>        readonly attribute DOMString     author;</webidl>
        <descriptive>
            <brief>
 Author of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="authorEmail" id="::W3CWidget::W3CWidget::authorEmail">
        <webidl>                readonly attribute DOMString     authorEmail;</webidl>
        <descriptive>
            <brief>
 Author e-mail.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="authorHref" id="::W3CWidget::W3CWidget::authorHref">
        <webidl>        readonly attribute DOMString     authorHref;</webidl>
        <descriptive>
            <brief>
 Author web site.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="description" id="::W3CWidget::W3CWidget::description">
        <webidl>                readonly attribute DOMString     description;</webidl>
        <descriptive>
            <brief>
 Description of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="id" id="::W3CWidget::W3CWidget::id">
        <webidl>                readonly attribute DOMString     id;</webidl>
        <descriptive>
            <brief>
 Identifier of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="name" id="::W3CWidget::W3CWidget::name">
        <webidl>                readonly attribute DOMString     name;</webidl>
        <descriptive>
            <brief>
 Name of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="shortName" id="::W3CWidget::W3CWidget::shortName">
        <webidl>                readonly attribute DOMString     shortName;</webidl>
        <descriptive>
            <brief>
 Short name of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="preferences" id="::W3CWidget::W3CWidget::preferences">
        <webidl>                readonly attribute <ref>Storage</ref>       preferences;</webidl>
        <descriptive>
            <brief>
 Preferences.
            </brief>
        </descriptive>
        <Type name="Storage"/>
      </Attribute>
      <Attribute readonly="readonly" name="version" id="::W3CWidget::W3CWidget::version">
        <webidl>                readonly attribute DOMString     version;</webidl>
        <descriptive>
            <brief>
 Version of widget.
            </brief>
        </descriptive>
        <Type type="DOMString"/>
      </Attribute>
      <Attribute readonly="readonly" name="height" id="::W3CWidget::W3CWidget::height">
        <webidl>                readonly attribute unsigned long height;</webidl>
        <descriptive>
            <brief>
 Height of widget.
            </brief>
        </descriptive>
        <Type type="unsigned long"/>
      </Attribute>
      <Attribute readonly="readonly" name="width" id="::W3CWidget::W3CWidget::width">
        <webidl>                readonly attribute unsigned long width;</webidl>
        <descriptive>
            <brief>
 Width of widget.
            </brief>
        </descriptive>
        <Type type="unsigned long"/>
      </Attribute>
    </Interface>
    <Interface name="WindowWidget" id="::W3CWidget::WindowWidget">
      <webidl>    [Supplemental, NoInterfaceObject]
    interface WindowWidget {
      readonly attribute <ref>W3CWidget</ref> widget;
    };</webidl>
      <ExtendedAttributeList>
        <ExtendedAttribute name="Supplemental"/>
        <ExtendedAttribute name="NoInterfaceObject"/>
      </ExtendedAttributeList>
      <Attribute readonly="readonly" name="widget" id="::W3CWidget::WindowWidget::widget">
        <webidl>      readonly attribute <ref>W3CWidget</ref> widget;</webidl>
        <descriptive>
            <brief>
 W3C Widget.
            </brief>
           <description>
            <p>
The Widget Interface &lt;a href=&quot;http://www.w3.org/TR/widgets-apis/&quot;>http://www.w3.org/TR/widgets-apis/&lt;/a>.
            </p>
           </description>
        </descriptive>
        <Type name="W3CWidget"/>
      </Attribute>
    </Interface>
    <Implements name1="Window" name2="WindowWidget">
      <webidl>    <ref>Window</ref> implements <ref>WindowWidget</ref>;</webidl>
    </Implements>
  </Module>
 <Module name="SpeechSynthesis" id="::SpeechSynthesis">
  <webidl>module SpeechSynthesis {
[Constructor]
interface SpeechRecognition : <ref>EventTarget</ref> {
    attribute <ref>SpeechGrammarList</ref> grammars;
    attribute DOMString lang;
    attribute boolean continuous;
    attribute boolean interimResults;
    attribute unsigned long maxAlternatives;
    attribute DOMString serviceURI;

    void start();
    void stop();
    void abort();

    attribute <ref>EventHandler</ref> onaudiostart;
    attribute <ref>EventHandler</ref> onsoundstart;
    attribute <ref>EventHandler</ref> onspeechstart;
    attribute <ref>EventHandler</ref> onspeechend;
    attribute <ref>EventHandler</ref> onsoundend;
    attribute <ref>EventHandler</ref> onaudioend;
    attribute <ref>EventHandler</ref> onresult;
    attribute <ref>EventHandler</ref> onnomatch;
    attribute <ref>EventHandler</ref> onerror;
    attribute <ref>EventHandler</ref> onstart;
    attribute <ref>EventHandler</ref> onend;
};

enum ErrorCode {
    &quot;no-speech&quot;,
    &quot;aborted&quot;,
    &quot;audio-capture&quot;,
    &quot;network&quot;,
    &quot;not-allowed&quot;,
    &quot;service-not-allowed&quot;,
    &quot;bad-grammar&quot;,
    &quot;language-not-supported&quot;
};

interface SpeechRecognitionError : <ref>Event</ref> {
    readonly attribute <ref>ErrorCode</ref> error;
    readonly attribute DOMString message;
};

interface SpeechRecognitionAlternative {
    readonly attribute DOMString transcript;
    readonly attribute float confidence;
};

interface SpeechRecognitionResult {
    readonly attribute unsigned long length;
    getter <ref>SpeechRecognitionAlternative</ref> item(unsigned long index);
    readonly attribute boolean final;
};

interface SpeechRecognitionResultList {
    readonly attribute unsigned long length;
    getter <ref>SpeechRecognitionResult</ref> item(unsigned long index);
};

interface SpeechRecognitionEvent : <ref>Event</ref> {
    readonly attribute unsigned long resultIndex;
    readonly attribute <ref>SpeechRecognitionResultList</ref> results;
    readonly attribute any interpretation;
    readonly attribute <ref>Document</ref> emma;
};

[Constructor]
interface SpeechGrammar {
    attribute DOMString src;
    attribute float weight;
};

[Constructor]
interface SpeechGrammarList {
    readonly attribute unsigned long length;
    getter <ref>SpeechGrammar</ref> item(unsigned long index);
    void addFromURI(DOMString src,
                    optional float weight);
    void addFromString(DOMString string,
                       optional float weight);
};

interface SpeechSynthesis {
    readonly attribute boolean pending;
    readonly attribute boolean speaking;
    readonly attribute boolean paused;

    void speak(<ref>SpeechSynthesisUtterance</ref> utterance);
    void cancel();
    void pause();
    void resume();
    <ref>SpeechSynthesisVoiceList</ref> getVoices();
};

[NoInterfaceObject]
interface SpeechSynthesisGetter {
    readonly attribute <ref>SpeechSynthesis</ref> speechSynthesis;
};

<ref>Window</ref> implements <ref>SpeechSynthesisGetter</ref>;

[Constructor, Constructor(DOMString text)]
interface SpeechSynthesisUtterance : <ref>EventTarget</ref> {
    attribute DOMString text;
    attribute DOMString lang;
    attribute DOMString voiceURI;
    attribute float volume;
    attribute float rate;
    attribute float pitch;

    attribute <ref>EventHandler</ref> onstart;
    attribute <ref>EventHandler</ref> onend;
    attribute <ref>EventHandler</ref> onerror;
    attribute <ref>EventHandler</ref> onpause;
    attribute <ref>EventHandler</ref> onresume;
    attribute <ref>EventHandler</ref> onmark;
    attribute <ref>EventHandler</ref> onboundary;
};

interface SpeechSynthesisEvent : <ref>Event</ref> {
    readonly attribute unsigned long charIndex;
    readonly attribute float elapsedTime;
    readonly attribute DOMString name;
};

interface SpeechSynthesisVoice {
    readonly attribute DOMString voiceURI;
    readonly attribute DOMString name;
    readonly attribute DOMString lang;
    readonly attribute boolean localService;
};

interface SpeechSynthesisVoiceList {
    readonly attribute unsigned long length;
    getter <ref>SpeechSynthesisVoice</ref> item(unsigned long index);
};</webidl>
  <Interface name="SpeechRecognition" id="::SpeechRecognition">
    <webidl>[Constructor]
interface SpeechRecognition : <ref>EventTarget</ref> {
    attribute <ref>SpeechGrammarList</ref> grammars;
    attribute DOMString lang;
    attribute boolean continuous;
    attribute boolean interimResults;
    attribute unsigned long maxAlternatives;
    attribute DOMString serviceURI;

    void start();
    void stop();
    void abort();

    attribute <ref>EventHandler</ref> onaudiostart;
    attribute <ref>EventHandler</ref> onsoundstart;
    attribute <ref>EventHandler</ref> onspeechstart;
    attribute <ref>EventHandler</ref> onspeechend;
    attribute <ref>EventHandler</ref> onsoundend;
    attribute <ref>EventHandler</ref> onaudioend;
    attribute <ref>EventHandler</ref> onresult;
    attribute <ref>EventHandler</ref> onnomatch;
    attribute <ref>EventHandler</ref> onerror;
    attribute <ref>EventHandler</ref> onstart;
    attribute <ref>EventHandler</ref> onend;
};</webidl>
    <ExtendedAttributeList>
      <ExtendedAttribute name="Constructor">
        <webidl>Constructor</webidl>
      </ExtendedAttribute>
    </ExtendedAttributeList>
    <InterfaceInheritance>
      <Name name="EventTarget"/>
    </InterfaceInheritance>
    <Attribute name="grammars" id="::SpeechRecognition::grammars">
      <webidl>    attribute <ref>SpeechGrammarList</ref> grammars;</webidl>
      <Type name="SpeechGrammarList"/>
    </Attribute>
    <Attribute name="lang" id="::SpeechRecognition::lang">
      <webidl>    attribute DOMString lang;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute name="continuous" id="::SpeechRecognition::continuous">
      <webidl>    attribute boolean continuous;</webidl>
      <Type type="boolean"/>
    </Attribute>
    <Attribute name="interimResults" id="::SpeechRecognition::interimResults">
      <webidl>    attribute boolean interimResults;</webidl>
      <Type type="boolean"/>
    </Attribute>
    <Attribute name="maxAlternatives" id="::SpeechRecognition::maxAlternatives">
      <webidl>    attribute unsigned long maxAlternatives;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Attribute name="serviceURI" id="::SpeechRecognition::serviceURI">
      <webidl>    attribute DOMString serviceURI;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Operation name="start" id="::SpeechRecognition::start">
      <webidl>    void start();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Operation name="stop" id="::SpeechRecognition::stop">
      <webidl>    void stop();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Operation name="abort" id="::SpeechRecognition::abort">
      <webidl>    void abort();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Attribute name="onaudiostart" id="::SpeechRecognition::onaudiostart">
      <webidl>    attribute <ref>EventHandler</ref> onaudiostart;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onsoundstart" id="::SpeechRecognition::onsoundstart">
      <webidl>    attribute <ref>EventHandler</ref> onsoundstart;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onspeechstart" id="::SpeechRecognition::onspeechstart">
      <webidl>    attribute <ref>EventHandler</ref> onspeechstart;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onspeechend" id="::SpeechRecognition::onspeechend">
      <webidl>    attribute <ref>EventHandler</ref> onspeechend;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onsoundend" id="::SpeechRecognition::onsoundend">
      <webidl>    attribute <ref>EventHandler</ref> onsoundend;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onaudioend" id="::SpeechRecognition::onaudioend">
      <webidl>    attribute <ref>EventHandler</ref> onaudioend;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onresult" id="::SpeechRecognition::onresult">
      <webidl>    attribute <ref>EventHandler</ref> onresult;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onnomatch" id="::SpeechRecognition::onnomatch">
      <webidl>    attribute <ref>EventHandler</ref> onnomatch;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onerror" id="::SpeechRecognition::onerror">
      <webidl>    attribute <ref>EventHandler</ref> onerror;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onstart" id="::SpeechRecognition::onstart">
      <webidl>    attribute <ref>EventHandler</ref> onstart;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onend" id="::SpeechRecognition::onend">
      <webidl>    attribute <ref>EventHandler</ref> onend;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
  </Interface>
  <Enum name="ErrorCode" id="::ErrorCode">
    <webidl>enum ErrorCode {
    &quot;no-speech&quot;,
    &quot;aborted&quot;,
    &quot;audio-capture&quot;,
    &quot;network&quot;,
    &quot;not-allowed&quot;,
    &quot;service-not-allowed&quot;,
    &quot;bad-grammar&quot;,
    &quot;language-not-supported&quot;
};</webidl>
    <EnumValue stringvalue="no-speech">
      <webidl>    &quot;no-speech</webidl>
    </EnumValue>
    <EnumValue stringvalue="aborted">
      <webidl>    &quot;aborted</webidl>
    </EnumValue>
    <EnumValue stringvalue="audio-capture">
      <webidl>    &quot;audio-capture</webidl>
    </EnumValue>
    <EnumValue stringvalue="network">
      <webidl>    &quot;network</webidl>
    </EnumValue>
    <EnumValue stringvalue="not-allowed">
      <webidl>    &quot;not-allowed</webidl>
    </EnumValue>
    <EnumValue stringvalue="service-not-allowed">
      <webidl>    &quot;service-not-allowed</webidl>
    </EnumValue>
    <EnumValue stringvalue="bad-grammar">
      <webidl>    &quot;bad-grammar</webidl>
    </EnumValue>
    <EnumValue stringvalue="language-not-supported">
      <webidl>    &quot;language-not-supported</webidl>
    </EnumValue>
  </Enum>
  <Interface name="SpeechRecognitionError" id="::SpeechRecognitionError">
    <webidl>interface SpeechRecognitionError : <ref>Event</ref> {
    readonly attribute <ref>ErrorCode</ref> error;
    readonly attribute DOMString message;
};</webidl>
    <InterfaceInheritance>
      <Name name="Event"/>
    </InterfaceInheritance>
    <Attribute readonly="readonly" name="error" id="::SpeechRecognitionError::error">
      <webidl>    readonly attribute <ref>ErrorCode</ref> error;</webidl>
      <Type name="ErrorCode"/>
    </Attribute>
    <Attribute readonly="readonly" name="message" id="::SpeechRecognitionError::message">
      <webidl>    readonly attribute DOMString message;</webidl>
      <Type type="DOMString"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechRecognitionAlternative" id="::SpeechRecognitionAlternative">
    <webidl>interface SpeechRecognitionAlternative {
    readonly attribute DOMString transcript;
    readonly attribute float confidence;
};</webidl>
    <Attribute readonly="readonly" name="transcript" id="::SpeechRecognitionAlternative::transcript">
      <webidl>    readonly attribute DOMString transcript;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute readonly="readonly" name="confidence" id="::SpeechRecognitionAlternative::confidence">
      <webidl>    readonly attribute float confidence;</webidl>
      <Type type="float"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechRecognitionResult" id="::SpeechRecognitionResult">
    <webidl>interface SpeechRecognitionResult {
    readonly attribute unsigned long length;
    getter <ref>SpeechRecognitionAlternative</ref> item(unsigned long index);
    readonly attribute boolean final;
};</webidl>
    <Attribute readonly="readonly" name="length" id="::SpeechRecognitionResult::length">
      <webidl>    readonly attribute unsigned long length;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Operation getter="getter" name="item" id="::SpeechRecognitionResult::item">
      <webidl>    getter <ref>SpeechRecognitionAlternative</ref> item(unsigned long index);</webidl>
      <Type name="SpeechRecognitionAlternative"/>
      <ArgumentList>
        <Argument name="index">
          <Type type="unsigned long"/>
        </Argument>
      </ArgumentList>
    </Operation>
    <Attribute readonly="readonly" name="final" id="::SpeechRecognitionResult::final">
      <webidl>    readonly attribute boolean final;</webidl>
      <Type type="boolean"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechRecognitionResultList" id="::SpeechRecognitionResultList">
    <webidl>interface SpeechRecognitionResultList {
    readonly attribute unsigned long length;
    getter <ref>SpeechRecognitionResult</ref> item(unsigned long index);
};</webidl>
    <Attribute readonly="readonly" name="length" id="::SpeechRecognitionResultList::length">
      <webidl>    readonly attribute unsigned long length;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Operation getter="getter" name="item" id="::SpeechRecognitionResultList::item">
      <webidl>    getter <ref>SpeechRecognitionResult</ref> item(unsigned long index);</webidl>
      <Type name="SpeechRecognitionResult"/>
      <ArgumentList>
        <Argument name="index">
          <Type type="unsigned long"/>
        </Argument>
      </ArgumentList>
    </Operation>
  </Interface>
  <Interface name="SpeechRecognitionEvent" id="::SpeechRecognitionEvent">
    <webidl>interface SpeechRecognitionEvent : <ref>Event</ref> {
    readonly attribute unsigned long resultIndex;
    readonly attribute <ref>SpeechRecognitionResultList</ref> results;
    readonly attribute any interpretation;
    readonly attribute <ref>Document</ref> emma;
};</webidl>
    <InterfaceInheritance>
      <Name name="Event"/>
    </InterfaceInheritance>
    <Attribute readonly="readonly" name="resultIndex" id="::SpeechRecognitionEvent::resultIndex">
      <webidl>    readonly attribute unsigned long resultIndex;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Attribute readonly="readonly" name="results" id="::SpeechRecognitionEvent::results">
      <webidl>    readonly attribute <ref>SpeechRecognitionResultList</ref> results;</webidl>
      <Type name="SpeechRecognitionResultList"/>
    </Attribute>
    <Attribute readonly="readonly" name="interpretation" id="::SpeechRecognitionEvent::interpretation">
      <webidl>    readonly attribute any interpretation;</webidl>
      <Type type="any"/>
    </Attribute>
    <Attribute readonly="readonly" name="emma" id="::SpeechRecognitionEvent::emma">
      <webidl>    readonly attribute <ref>Document</ref> emma;</webidl>
      <Type name="Document"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechGrammar" id="::SpeechGrammar">
    <webidl>[Constructor]
interface SpeechGrammar {
    attribute DOMString src;
    attribute float weight;
};</webidl>
    <ExtendedAttributeList>
      <ExtendedAttribute name="Constructor">
        <webidl>Constructor</webidl>
      </ExtendedAttribute>
    </ExtendedAttributeList>
    <Attribute name="src" id="::SpeechGrammar::src">
      <webidl>    attribute DOMString src;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute name="weight" id="::SpeechGrammar::weight">
      <webidl>    attribute float weight;</webidl>
      <Type type="float"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechGrammarList" id="::SpeechGrammarList">
    <webidl>[Constructor]
interface SpeechGrammarList {
    readonly attribute unsigned long length;
    getter <ref>SpeechGrammar</ref> item(unsigned long index);
    void addFromURI(DOMString src,
                    optional float weight);
    void addFromString(DOMString string,
                       optional float weight);
};</webidl>
    <ExtendedAttributeList>
      <ExtendedAttribute name="Constructor">
        <webidl>Constructor</webidl>
      </ExtendedAttribute>
    </ExtendedAttributeList>
    <Attribute readonly="readonly" name="length" id="::SpeechGrammarList::length">
      <webidl>    readonly attribute unsigned long length;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Operation getter="getter" name="item" id="::SpeechGrammarList::item">
      <webidl>    getter <ref>SpeechGrammar</ref> item(unsigned long index);</webidl>
      <Type name="SpeechGrammar"/>
      <ArgumentList>
        <Argument name="index">
          <Type type="unsigned long"/>
        </Argument>
      </ArgumentList>
    </Operation>
    <Operation name="addFromURI" id="::SpeechGrammarList::addFromURI">
      <webidl>    void addFromURI(DOMString src,
                    optional float weight);</webidl>
      <Type type="void"/>
      <ArgumentList>
        <Argument name="src">
          <Type type="DOMString"/>
        </Argument>
        <Argument optional="optional" name="weight">
          <Type type="float"/>
        </Argument>
      </ArgumentList>
    </Operation>
    <Operation name="addFromString" id="::SpeechGrammarList::addFromString">
      <webidl>    void addFromString(DOMString string,
                       optional float weight);</webidl>
      <Type type="void"/>
      <ArgumentList>
        <Argument name="string">
          <Type type="DOMString"/>
        </Argument>
        <Argument optional="optional" name="weight">
          <Type type="float"/>
        </Argument>
      </ArgumentList>
    </Operation>
  </Interface>
  <Interface name="SpeechSynthesis" id="::SpeechSynthesis">
    <webidl>interface SpeechSynthesis {
    readonly attribute boolean pending;
    readonly attribute boolean speaking;
    readonly attribute boolean paused;

    void speak(<ref>SpeechSynthesisUtterance</ref> utterance);
    void cancel();
    void pause();
    void resume();
    <ref>SpeechSynthesisVoiceList</ref> getVoices();
};</webidl>
    <Attribute readonly="readonly" name="pending" id="::SpeechSynthesis::pending">
      <webidl>    readonly attribute boolean pending;</webidl>
      <Type type="boolean"/>
    </Attribute>
    <Attribute readonly="readonly" name="speaking" id="::SpeechSynthesis::speaking">
      <webidl>    readonly attribute boolean speaking;</webidl>
      <Type type="boolean"/>
    </Attribute>
    <Attribute readonly="readonly" name="paused" id="::SpeechSynthesis::paused">
      <webidl>    readonly attribute boolean paused;</webidl>
      <Type type="boolean"/>
    </Attribute>
    <Operation name="speak" id="::SpeechSynthesis::speak">
      <webidl>    void speak(<ref>SpeechSynthesisUtterance</ref> utterance);</webidl>
      <Type type="void"/>
      <ArgumentList>
        <Argument name="utterance">
          <Type name="SpeechSynthesisUtterance"/>
        </Argument>
      </ArgumentList>
    </Operation>
    <Operation name="cancel" id="::SpeechSynthesis::cancel">
      <webidl>    void cancel();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Operation name="pause" id="::SpeechSynthesis::pause">
      <webidl>    void pause();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Operation name="resume" id="::SpeechSynthesis::resume">
      <webidl>    void resume();</webidl>
      <Type type="void"/>
      <ArgumentList/>
    </Operation>
    <Operation name="getVoices" id="::SpeechSynthesis::getVoices">
      <webidl>    <ref>SpeechSynthesisVoiceList</ref> getVoices();</webidl>
      <Type name="SpeechSynthesisVoiceList"/>
      <ArgumentList/>
    </Operation>
  </Interface>
  <Interface name="SpeechSynthesisGetter" id="::SpeechSynthesisGetter">
    <webidl>[NoInterfaceObject]
interface SpeechSynthesisGetter {
    readonly attribute <ref>SpeechSynthesis</ref> speechSynthesis;
};</webidl>
    <ExtendedAttributeList>
      <ExtendedAttribute name="NoInterfaceObject">
        <webidl>NoInterfaceObject</webidl>
      </ExtendedAttribute>
    </ExtendedAttributeList>
    <Attribute readonly="readonly" name="speechSynthesis" id="::SpeechSynthesisGetter::speechSynthesis">
      <webidl>    readonly attribute <ref>SpeechSynthesis</ref> speechSynthesis;</webidl>
      <Type name="SpeechSynthesis"/>
    </Attribute>
  </Interface>
  <Implements name1="Window" name2="SpeechSynthesisGetter">
    <webidl><ref>Window</ref> implements <ref>SpeechSynthesisGetter</ref>;</webidl>
  </Implements>
  <Interface name="SpeechSynthesisUtterance" id="::SpeechSynthesisUtterance">
    <webidl>[Constructor, Constructor(DOMString text)]
interface SpeechSynthesisUtterance : <ref>EventTarget</ref> {
    attribute DOMString text;
    attribute DOMString lang;
    attribute DOMString voiceURI;
    attribute float volume;
    attribute float rate;
    attribute float pitch;

    attribute <ref>EventHandler</ref> onstart;
    attribute <ref>EventHandler</ref> onend;
    attribute <ref>EventHandler</ref> onerror;
    attribute <ref>EventHandler</ref> onpause;
    attribute <ref>EventHandler</ref> onresume;
    attribute <ref>EventHandler</ref> onmark;
    attribute <ref>EventHandler</ref> onboundary;
};</webidl>
    <ExtendedAttributeList>
      <ExtendedAttribute name="Constructor">
        <webidl>Constructor</webidl>
      </ExtendedAttribute>
      <ExtendedAttribute name="Constructor">
        <webidl> Constructor(DOMString text)</webidl>
        <ArgumentList>
          <Argument name="text">
            <Type type="DOMString"/>
          </Argument>
        </ArgumentList>
      </ExtendedAttribute>
    </ExtendedAttributeList>
    <InterfaceInheritance>
      <Name name="EventTarget"/>
    </InterfaceInheritance>
    <Attribute name="text" id="::SpeechSynthesisUtterance::text">
      <webidl>    attribute DOMString text;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute name="lang" id="::SpeechSynthesisUtterance::lang">
      <webidl>    attribute DOMString lang;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute name="voiceURI" id="::SpeechSynthesisUtterance::voiceURI">
      <webidl>    attribute DOMString voiceURI;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute name="volume" id="::SpeechSynthesisUtterance::volume">
      <webidl>    attribute float volume;</webidl>
      <Type type="float"/>
    </Attribute>
    <Attribute name="rate" id="::SpeechSynthesisUtterance::rate">
      <webidl>    attribute float rate;</webidl>
      <Type type="float"/>
    </Attribute>
    <Attribute name="pitch" id="::SpeechSynthesisUtterance::pitch">
      <webidl>    attribute float pitch;</webidl>
      <Type type="float"/>
    </Attribute>
    <Attribute name="onstart" id="::SpeechSynthesisUtterance::onstart">
      <webidl>    attribute <ref>EventHandler</ref> onstart;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onend" id="::SpeechSynthesisUtterance::onend">
      <webidl>    attribute <ref>EventHandler</ref> onend;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onerror" id="::SpeechSynthesisUtterance::onerror">
      <webidl>    attribute <ref>EventHandler</ref> onerror;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onpause" id="::SpeechSynthesisUtterance::onpause">
      <webidl>    attribute <ref>EventHandler</ref> onpause;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onresume" id="::SpeechSynthesisUtterance::onresume">
      <webidl>    attribute <ref>EventHandler</ref> onresume;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onmark" id="::SpeechSynthesisUtterance::onmark">
      <webidl>    attribute <ref>EventHandler</ref> onmark;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
    <Attribute name="onboundary" id="::SpeechSynthesisUtterance::onboundary">
      <webidl>    attribute <ref>EventHandler</ref> onboundary;</webidl>
      <Type name="EventHandler"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechSynthesisEvent" id="::SpeechSynthesisEvent">
    <webidl>interface SpeechSynthesisEvent : <ref>Event</ref> {
    readonly attribute unsigned long charIndex;
    readonly attribute float elapsedTime;
    readonly attribute DOMString name;
};</webidl>
    <InterfaceInheritance>
      <Name name="Event"/>
    </InterfaceInheritance>
    <Attribute readonly="readonly" name="charIndex" id="::SpeechSynthesisEvent::charIndex">
      <webidl>    readonly attribute unsigned long charIndex;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Attribute readonly="readonly" name="elapsedTime" id="::SpeechSynthesisEvent::elapsedTime">
      <webidl>    readonly attribute float elapsedTime;</webidl>
      <Type type="float"/>
    </Attribute>
    <Attribute readonly="readonly" name="name" id="::SpeechSynthesisEvent::name">
      <webidl>    readonly attribute DOMString name;</webidl>
      <Type type="DOMString"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechSynthesisVoice" id="::SpeechSynthesisVoice">
    <webidl>interface SpeechSynthesisVoice {
    readonly attribute DOMString voiceURI;
    readonly attribute DOMString name;
    readonly attribute DOMString lang;
    readonly attribute boolean localService;
};</webidl>
    <Attribute readonly="readonly" name="voiceURI" id="::SpeechSynthesisVoice::voiceURI">
      <webidl>    readonly attribute DOMString voiceURI;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute readonly="readonly" name="name" id="::SpeechSynthesisVoice::name">
      <webidl>    readonly attribute DOMString name;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute readonly="readonly" name="lang" id="::SpeechSynthesisVoice::lang">
      <webidl>    readonly attribute DOMString lang;</webidl>
      <Type type="DOMString"/>
    </Attribute>
    <Attribute readonly="readonly" name="localService" id="::SpeechSynthesisVoice::localService">
      <webidl>    readonly attribute boolean localService;</webidl>
      <Type type="boolean"/>
    </Attribute>
  </Interface>
  <Interface name="SpeechSynthesisVoiceList" id="::SpeechSynthesisVoiceList">
    <webidl>interface SpeechSynthesisVoiceList {
    readonly attribute unsigned long length;
    getter <ref>SpeechSynthesisVoice</ref> item(unsigned long index);
};</webidl>
    <Attribute readonly="readonly" name="length" id="::SpeechSynthesisVoiceList::length">
      <webidl>    readonly attribute unsigned long length;</webidl>
      <Type type="unsigned long"/>
    </Attribute>
    <Operation getter="getter" name="item" id="::SpeechSynthesisVoiceList::item">
      <webidl>    getter <ref>SpeechSynthesisVoice</ref> item(unsigned long index);</webidl>
      <Type name="SpeechSynthesisVoice"/>
      <ArgumentList>
        <Argument name="index">
          <Type type="unsigned long"/>
        </Argument>
      </ArgumentList>
    </Operation>
  </Interface>
 </Module>
 </Definitions>
